{"version":3,"sources":["img/4.png","img/2.png","utils/sliceBetweenWords.js","utils/store/storeClass.js","utils/store/StoreContext.js","components/YandexMap.js","components/RecyclePoints.js","components/ExternalLink.js","utils/preventMobileScrolling.js","components/ProjectDescription.js","App.js","utils/store/index.js","serviceWorker.js","index.js"],"names":["module","exports","sliceBetweenWords","string","openTag","closeTag","start","end","index","toLowerCase","indexOf","length","slice","tagsMap","tag","propName","required","store","props","get","data","this","Promise","res","rej","a","axios","DBlink","listId","lists","filter","list","name","mappedPoints","cards","card","idList","id","map","damadged","parsedTags","parsedText","desc","reduce","b","pos","posX","posY","heading","point","StoreContext","React","createContext","ZoomByDelta","deltaLessThan","zoom","sizeConverter","size","W","H","iconImageSize","Math","round","iconImageOffset","addPoint","address","window","ymaps","geocode","result","geoObjects","geometry","_coordinates","add","Placemark","balloonContent","addressNice","time","comment","img","iconCaption","iconLayout","iconImageHref","icon","replacePoints","points","removeAll","minX","maxX","minY","maxY","pointIndex","min","max","setCenter","deltaX","deltaY","aspect","mapRef","current","clientWidth","clientHeight","maxDelta","setZoom","componentDidMount","ready","Map","center","setState","render","ref","state","createRef","Component","RecyclePoints","initData","context","className","contextType","href","to","target","newTab","rel","children","preventDefault","event","infoBlocks","h2","ExternalLink","ProjectDescription","element","aboutButtonRef","addEventListener","passive","componentWillUnmount","removeEventListener","onClick","showMobile","item","bottom","App","stateRefs","Provider","value","storeClass","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61de2f8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/4.8abcc456.png\";","module.exports = __webpack_public_path__ + \"static/media/2.09bde733.png\";","const sliceBetweenWords = (string, openTag, closeTag) => {\n  let start = 0, end = -1\n  \n  const index = string\n    .toLowerCase()\n    .indexOf(openTag.toLowerCase())\n\n  if (index !== -1)\n    start = index + openTag.length\n\n    \n  if (closeTag) {\n    const index = string\n      .toLowerCase()\n      .indexOf(closeTag.toLowerCase())\n\n    if (index !== -1)\n      end = index\n  }\n\n  if (start === 0)\n    return \"\"\n  if (end === -1)\n    return string.slice(start)\n\n\n  return string.slice(start, end)\n}\n\nexport default sliceBetweenWords","import axios from 'axios'\n\nimport sliceBetweenWords from '../sliceBetweenWords'\n\n\nconst tagsMap = [\n  {\n    tag: \"широта\",\n    propName: \"posX\",\n    required: true,\n  },\n  {\n    tag: \"долгота\",\n    propName: \"posY\",\n    required: true,\n  },\n  {\n    tag: \"адрес\",\n    propName: \"address\",\n    // required: true,\n  },\n  {\n    tag: \"время работы\",\n    propName: \"time\",\n  },\n  {\n    tag: \"комментарий\",\n    propName: \"comment\",\n  },\n  {\n    tag: \"картинка\",\n    propName: \"img\",\n  },\n  {\n    tag: \"icon\",\n    propName: \"icon\",\n  },\n]\n\n\nexport default class store {\n  constructor(props) {\n    this.props = props\n    this.data = new Promise(async (res, rej) => {\n      const data = (await axios.get(props.DBlink)).data\n      let listId = data.lists.filter(list => list.name === \"Database\")\n\n      if (listId.length < 1)\n        rej(\"no Database board\")\n\n      const mappedPoints = data.cards\n        .filter(card => card.idList === listId[0].id)\n        .map(card => {\n          let damadged = false\n          const parsedTags = tagsMap\n            .map(tag => {\n              const parsedText = sliceBetweenWords(card.desc, `<${tag.tag}>`, `</${tag.tag}>`)\n              \n              if (tag.required && parsedText === \"\")\n                damadged = true\n\n              return ({[tag.propName]: parsedText})\n            })\n            .reduce((a, b) => ({...a, ...b}))\n\n          return ({\n            ...parsedTags,\n            pos: [parsedTags.posX, parsedTags.posY],\n            heading: card.name,\n            damadged: damadged\n          })\n        })\n        .filter(point => !point.damadged)\n\n      res(mappedPoints)\n    })\n  }\n\n  get = () => this.data\n}","import React from 'react'\n\nconst StoreContext = React.createContext(\"new store()\")\nexport default StoreContext","import React, { Component } from 'react'\n\nimport Icon4 from '../img/4.png'\nimport Icon2 from '../img/2.png'\n\n\nconst ZoomByDelta = [\n  {\n    deltaLessThan: 5,\n    zoom: 8,\n  },\n  {\n    deltaLessThan: 2.5,\n    zoom: 9,\n  },\n  {\n    deltaLessThan: 1.5,\n    zoom: 10,\n  },\n  {\n    deltaLessThan: 1,\n    zoom: 11,\n  },\n  {\n    deltaLessThan: .5,\n    zoom: 12,\n  },\n  {\n    deltaLessThan: 0.035,\n    zoom: 13,\n  },\n  {\n    deltaLessThan: 0.025,\n    zoom: 14,\n  },\n  {\n    deltaLessThan: 0.004,\n    zoom: 15,\n  },\n  {\n    deltaLessThan: 0.0005,\n    zoom: 16,\n  },\n  {\n    deltaLessThan: 0.00025,\n    zoom: 17,\n  },\n]\n\nconst sizeConverter = (size, W = 228, H = 326) =>\n  ({\n    iconImageSize: [Math.round(W / 10 * size), Math.round(H / 10 * size)],\n    iconImageOffset: [-Math.round(W / 20 * size), -Math.round(H * .95 / 10 * size)]\n  })\n\nconst getIcon = icon => {\n  switch (parseInt(icon)) {\n    case 4:\n      return Icon4\n    default:\n      return Icon2\n  }\n}\n\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ready: false,\n      replacePoints: this.replacePoints,\n    }\n\n    this.mapRef = new React.createRef()\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!state.ready)\n      return state\n\n    state.replacePoints(props)\n    return state\n  }\n\n  addPoint = async point => new Promise(async (res, rej) => {\n    let pos\n\n    if (point.pos)\n      pos = point.pos\n    else {\n      if (!point.address)\n        rej(\"no pos, no address\")\n\n      const result = await window.ymaps.geocode(\"Россия, Санкт-Петербург, \" + point.address)\n      pos = result.geoObjects.get(0).geometry._coordinates\n    }\n\n\n    const added = this.map.geoObjects\n      .add(new window.ymaps.Placemark(\n        pos,\n        {\n          balloonContent: `\n            <div class=\"yandex-baloon\">\n              <h2 style=\"margin-bottom: 10px\">${point.heading}</h2>\n              <small><i>${point.addressNice || point.address}</i></small><br>\n              <h3 style=\"margin-bottom: 10px\">Время работы: ${point.time}</h3><br>\n              ${point.comment}<br><br>\n              ${point.img !== \"\" ? `<img style='width: 70%' src=${point.img}></img>` : \"\"}\n            </div>\n            `,\n          iconCaption: point.heading,\n        },{\n          iconLayout: 'default#image',\n          iconImageHref: point.icon,\n          ...sizeConverter(1.7)\n        }\n      ))\n\n    res(pos) //REDO\n  })\n\n  replacePoints = async props => {\n    if (!(props.points?.length > 0))\n      return\n\n    this.map.geoObjects.removeAll()\n    this.minX = null\n    this.maxX = null\n    this.minY = null\n    this.maxY = null\n\n    for (let pointIndex in props.points) {\n      const point = props.points[pointIndex]\n      const res = await this.addPoint(point)\n\n      this.minX = this.minX === null ? res[0] : Math.min(res[0], this.minX)\n      this.maxX = this.maxX === null ? res[0] : Math.max(res[0], this.maxX)\n      this.minY = this.minY === null ? res[1] : Math.min(res[1], this.minY)\n      this.maxY = this.maxY === null ? res[1] : Math.max(res[1], this.maxY)\n    }\n\n    this.map.setCenter([(this.minX + this.maxX) / 2, (this.minY + this.maxY) / 2])\n\n    const deltaX = this.maxX - this.minX\n    const deltaY = this.maxY - this.minY\n    const aspect = this.mapRef.current.clientWidth / this.mapRef.current.clientHeight\n    const maxDelta = deltaX / deltaY > aspect ? deltaY : deltaX\n    \n    let index = 0\n    while (ZoomByDelta[index].deltaLessThan > maxDelta && index < ZoomByDelta.length)\n      index++\n    if (index >= 0 && index < ZoomByDelta.length)\n      this.map.setZoom(ZoomByDelta[index - 1].zoom)\n\n  }\n\n\n  componentDidMount = () => \n    // setTimeout(() =>\n      window.ymaps.ready(() => {\n        this.map = new window.ymaps.Map(\"map\", {\n          center: [59.946897, 30.332514],\n          zoom: 11\n        })\n        this.setState({ready: true})\n      })\n    // , 500)\n\n  render = () =>\n    <div\n      id=\"map\"\n      ref={this.mapRef}\n    />\n}\n","import React, { Component } from 'react'\n\nimport { StoreContext } from '../utils/store'\nimport YandexMap from './YandexMap'\n\n\nclass RecyclePoints extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      points: []\n    }\n  }\n\n  componentDidMount = () => this.initData()\n\n  initData = async () => this.setState({points: await this.context.store.get()})\n\n  render = () => (\n    <div className=\"random-events\" id=\"random-events\">\n      <div className=\"random-events__map-container\">\n        <YandexMap\n          points={this.state.points}\n        />\n      </div>\n    </div>\n  )\n}\n\nRecyclePoints.contextType = StoreContext\n\nexport default RecyclePoints\n","import React from 'react'\n\nexport default (props) => (\n  <a\n    className={props.className}\n    href={props.to}\n    target={props.newTab ? \"_blank\" : \"\"}\n    rel=\"noopener noreferrer\"\n  >\n    {props.children}\n  </a>\n)","const preventDefault = event => event.preventDefault()\n\nconst registerListeners = element => {\n  element.addEventListener( 'wheel', preventDefault, { passive: false } )\n  // element.addEventListener( 'touchstart', preventDefault, { passive: false } )\n  // element.addEventListener( 'touchend', preventDefault, { passive: false } )\n  element.addEventListener( 'touchmove', preventDefault, { passive: false } )\n}\n\nconst unregisterListeners = element => {\n  element.removeEventListener( 'wheel', preventDefault, { passive: false } )\n  // element.removeEventListener( 'touchstart', preventDefault, { passive: false } )\n  // element.removeEventListener( 'touchend', preventDefault, { passive: false } )\n  element.removeEventListener( 'touchmove', preventDefault, { passive: false } )\n}\n\nexport { registerListeners, unregisterListeners }","import React, { Component } from 'react'\n\nimport { StoreContext } from '../utils/store'\nimport ExternalLink from './ExternalLink'\nimport { registerListeners, unregisterListeners } from '../utils/preventMobileScrolling'\n\n\nconst infoBlocks = [\n  {\n    h2: \"Экологичным быть: в Политехе запущен раздельный сбор отходов!\",\n    desc: <>\n      Активисты экологического объединения <ExternalLink to=\"https://vk.com/regreen_polytech\">ReGreen</ExternalLink> совместно с руководством СПбПУ разработали и внедрили систему раздельного сбора отходов (РСО) на территории университета. Сетки уже установлены рядом с корпусами и функционируют!\n    </>,\n    desc: <>\n      Контейнеры уже установленны и работают!\n    </>,\n    bottom: <>\n      Сайт разработан инициативной группой студентов в рамках дисциплины \"Основы проектной деятельности\".\n    </>\n  }\n    // bottom: <>\n    //   Исходный код на <ExternalLink to=\"https://github.com/the-sociophobic/recycle-polytech\">github.com</ExternalLink>\n    // </>\n]\n\n\nclass ProjectDescription extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showMobile: false\n    }\n\n    this.aboutButtonRef = React.createRef()\n  }\n\n  componentDidMount = () =>\n    registerListeners(this.aboutButtonRef.current)\n  componentWillUnmount = () =>\n    unregisterListeners(this.aboutButtonRef.current)\n\n  render = () => (\n    <div className=\"project-description\">\n      <div\n        ref={this.aboutButtonRef}\n        className=\"project-description__mobile-open\"\n        onClick={() => this.setState({showMobile: true})}\n      >\n        О Проекте\n      </div>\n      <div className={\"project-description__container \" + (this.state.showMobile && \"project-description__container--open\")}>\n        <div\n          className=\"project-description__mobile-close\"\n          onClick={() => this.setState({showMobile: false})}\n        />\n        <div className=\"project-description__h1\">\n          Карта раздельного сбора в Политехе\n        </div>\n        <div className=\"project-description__blocks\">\n          {infoBlocks.map(item =>\n            <div className=\"project-description__blocks__item\">\n              <div className=\"project-description__blocks__item__h2\">\n                {item.h2}\n              </div>\n              <div className=\"project-description__blocks__item__desc\">\n                {item.desc}\n              </div>\n              {item.bottom &&\n                <div className=\"project-description__blocks__item__bottom\">\n                  {item.bottom}\n                </div>}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nProjectDescription.contextType = StoreContext\n\nexport default ProjectDescription\n","import React, { Component } from 'react'\n\nimport { initialState, StoreContext } from './utils/store'\nimport RecyclePoints from './components/RecyclePoints'\nimport ProjectDescription from './components/ProjectDescription'\n\nimport './styles/index.sass'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = initialState({\n      state: this.state,\n      setState: this.setState,\n    })\n  }\n\n  render = () => (\n    <StoreContext.Provider value={this.state}>\n      <div className=\"App\">\n        <ProjectDescription />\n        <RecyclePoints />\n      </div>\n    </StoreContext.Provider>\n  )\n}\n\nexport default App\n","import storeClass from './storeClass'\nimport StoreContext from './StoreContext'\n\n\nconst initialState = stateRefs => ({\n  store: new storeClass({\n    stateRefs: stateRefs,\n    DBlink: \"https://trello.com/b/nKrfhtNh.json\",\n  }),\n})\n\nexport {\n  storeClass,\n  StoreContext,\n  initialState,\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}